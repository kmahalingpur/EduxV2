// <auto-generated />
using EduxV2.Data;
using EduxV2.Repo;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace EduxV2.Repo.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20180206145630_dbFix")]
    partial class dbFix
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EduxV2.Data.Activity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("ActivityDate");

                    b.Property<string>("ActivityNextStepId");

                    b.Property<string>("ActivitySourceId");

                    b.Property<string>("ActivityStatusId");

                    b.Property<string>("ActivityTypeId");

                    b.Property<DateTime?>("AppointmentDate");

                    b.Property<string>("CampusId");

                    b.Property<string>("ClassLevelId");

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("IPAddress");

                    b.Property<string>("OldSchool")
                        .HasMaxLength(200);

                    b.Property<string>("PositivenessId");

                    b.Property<string>("SchoolTypeId");

                    b.Property<string>("StaffId");

                    b.Property<DateTime>("UpdateDate");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("ActivityNextStepId");

                    b.HasIndex("ActivitySourceId");

                    b.HasIndex("ActivityStatusId");

                    b.HasIndex("ActivityTypeId");

                    b.HasIndex("CampusId");

                    b.HasIndex("ClassLevelId");

                    b.HasIndex("PositivenessId");

                    b.HasIndex("SchoolTypeId");

                    b.HasIndex("StaffId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("EduxV2.Data.ActivityNextStep", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("IPAddress");

                    b.Property<string>("Name");

                    b.Property<DateTime>("UpdateDate");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("ActivityNextSteps");
                });

            modelBuilder.Entity("EduxV2.Data.ActivitySource", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("IPAddress");

                    b.Property<string>("Name");

                    b.Property<string>("ParentActivitySourceId");

                    b.Property<DateTime>("UpdateDate");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("ParentActivitySourceId");

                    b.ToTable("ActivitySources");
                });

            modelBuilder.Entity("EduxV2.Data.ActivityStatus", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("IPAddress");

                    b.Property<string>("Name");

                    b.Property<DateTime>("UpdateDate");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("ActivityStatuses");
                });

            modelBuilder.Entity("EduxV2.Data.ActivityType", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("IPAddress");

                    b.Property<string>("Name");

                    b.Property<DateTime>("UpdateDate");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("ActivityTypes");
                });

            modelBuilder.Entity("EduxV2.Data.Campus", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("IPAddress");

                    b.Property<string>("Name");

                    b.Property<DateTime>("UpdateDate");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("Campuses");
                });

            modelBuilder.Entity("EduxV2.Data.ClassLevel", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("IPAddress");

                    b.Property<string>("Name");

                    b.Property<DateTime>("UpdateDate");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("ClassLevels");
                });

            modelBuilder.Entity("EduxV2.Data.Contact", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("BirthDate");

                    b.Property<string>("ClassLevelId");

                    b.Property<int>("ContactStatus");

                    b.Property<int>("ContactType");

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("FatherId");

                    b.Property<string>("FullName")
                        .HasMaxLength(200);

                    b.Property<int>("Gender");

                    b.Property<string>("IPAddress");

                    b.Property<string>("IdentityNumber")
                        .HasMaxLength(11);

                    b.Property<string>("MotherId");

                    b.Property<string>("OccupationId");

                    b.Property<string>("ParentId");

                    b.Property<int>("ParentRole");

                    b.Property<DateTime>("UpdateDate");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("ClassLevelId");

                    b.HasIndex("OccupationId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("EduxV2.Data.Occupation", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("IPAddress");

                    b.Property<string>("Name");

                    b.Property<DateTime>("UpdateDate");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("Occupations");
                });

            modelBuilder.Entity("EduxV2.Data.Positiveness", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("IPAddress");

                    b.Property<string>("Name");

                    b.Property<DateTime>("UpdateDate");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("Positiveness");
                });

            modelBuilder.Entity("EduxV2.Data.SchoolType", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("IPAddress");

                    b.Property<string>("Name");

                    b.Property<DateTime>("UpdateDate");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("SchoolTypes");
                });

            modelBuilder.Entity("EduxV2.Data.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("Email");

                    b.Property<string>("IPAddress");

                    b.Property<string>("Password");

                    b.Property<DateTime>("UpdateDate");

                    b.Property<string>("UpdatedBy");

                    b.Property<string>("UserName");

                    b.Property<string>("UserProfileId");

                    b.HasKey("Id");

                    b.HasIndex("UserProfileId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EduxV2.Data.UserProfile", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("FirstName");

                    b.Property<string>("IPAddress");

                    b.Property<string>("LastName");

                    b.Property<DateTime>("UpdateDate");

                    b.Property<string>("UpdatedBy");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserProfiles");
                });

            modelBuilder.Entity("EduxV2.Data.Activity", b =>
                {
                    b.HasOne("EduxV2.Data.ActivityNextStep", "ActivityNextStep")
                        .WithMany()
                        .HasForeignKey("ActivityNextStepId");

                    b.HasOne("EduxV2.Data.ActivitySource", "ActivitySource")
                        .WithMany()
                        .HasForeignKey("ActivitySourceId");

                    b.HasOne("EduxV2.Data.ActivityStatus", "ActivityStatus")
                        .WithMany()
                        .HasForeignKey("ActivityStatusId");

                    b.HasOne("EduxV2.Data.ActivityType", "ActivityType")
                        .WithMany()
                        .HasForeignKey("ActivityTypeId");

                    b.HasOne("EduxV2.Data.Campus", "Campus")
                        .WithMany()
                        .HasForeignKey("CampusId");

                    b.HasOne("EduxV2.Data.ClassLevel", "ClassLevel")
                        .WithMany()
                        .HasForeignKey("ClassLevelId");

                    b.HasOne("EduxV2.Data.Positiveness", "Positiveness")
                        .WithMany()
                        .HasForeignKey("PositivenessId");

                    b.HasOne("EduxV2.Data.SchoolType", "SchoolType")
                        .WithMany()
                        .HasForeignKey("SchoolTypeId");

                    b.HasOne("EduxV2.Data.Contact", "Staff")
                        .WithMany("Activities")
                        .HasForeignKey("StaffId");
                });

            modelBuilder.Entity("EduxV2.Data.ActivitySource", b =>
                {
                    b.HasOne("EduxV2.Data.ActivitySource", "ParentActivitySource")
                        .WithMany("ChildActivitySources")
                        .HasForeignKey("ParentActivitySourceId");
                });

            modelBuilder.Entity("EduxV2.Data.Contact", b =>
                {
                    b.HasOne("EduxV2.Data.ClassLevel", "ClassLevel")
                        .WithMany()
                        .HasForeignKey("ClassLevelId");

                    b.HasOne("EduxV2.Data.Occupation", "Occupation")
                        .WithMany()
                        .HasForeignKey("OccupationId");
                });

            modelBuilder.Entity("EduxV2.Data.User", b =>
                {
                    b.HasOne("EduxV2.Data.UserProfile", "UserProfile")
                        .WithMany()
                        .HasForeignKey("UserProfileId");
                });

            modelBuilder.Entity("EduxV2.Data.UserProfile", b =>
                {
                    b.HasOne("EduxV2.Data.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
